spring:
  application:
    name: product-service
  profiles:
    include: observability
  
  # Database Configuration
  datasource:
    url: jdbc:postgresql://localhost:5432/microservices_ecom
    username: ecom_user
    password: ecom_pass
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      connection-timeout: 20000
      idle-timeout: 600000
      max-lifetime: 1800000
      
  jpa:
    hibernate:
      ddl-auto: none  # Disable Hibernate DDL - using standalone sql-migration project
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
        generate_statistics: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect

server:
  port: 8088

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}

# Observability Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,env,beans
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
    tags:
      application: ${spring.application.name}
      environment: dev

# OpenTelemetry configuration handled by common-library

# Logging Configuration
logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%X{correlationId:-}] [%thread] %-5level %logger{36} - %msg%n"
  level:
    com.amar: DEBUG
    org.springframework.web.client: DEBUG
    com.netflix.eureka: DEBUG
    com.netflix.discovery: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql: TRACE
    org.springframework.transaction: DEBUG